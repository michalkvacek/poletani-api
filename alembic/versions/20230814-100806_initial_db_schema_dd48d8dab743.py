"""initial DB schema

Revision ID: dd48d8dab743
Revises: 
Create Date: 2023-08-14 10:08:06.796608

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'dd48d8dab743'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=128), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('public_username', sa.String(length=128), nullable=True),
    sa.Column('avatar_image_filename', sa.String(length=128), nullable=True),
    sa.Column('title_image_filename', sa.String(length=128), nullable=True),
    sa.Column('password_hashed', sa.String(length=60), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('public_username')
    )
    op.create_table('weather_info',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('qnh', sa.Integer(), nullable=True),
    sa.Column('temperature_surface', sa.Float(), nullable=True),
    sa.Column('dewpoint_surface', sa.Float(), nullable=True),
    sa.Column('rain', sa.Float(), nullable=True),
    sa.Column('cloudcover_low', sa.Float(), nullable=True),
    sa.Column('cloudcover_total', sa.Float(), nullable=True),
    sa.Column('wind_speed_surface', sa.Float(), nullable=True),
    sa.Column('wind_direction_surface', sa.Float(), nullable=True),
    sa.Column('datetime', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('airport',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('icao_code', sa.String(length=8), nullable=False),
    sa.Column('gps_latitude', sa.Float(), nullable=False),
    sa.Column('gps_longitude', sa.Float(), nullable=False),
    sa.Column('elevation', sa.Integer(), nullable=True),
    sa.Column('is_public', sa.Boolean(), server_default='0', nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('deleted', sa.Boolean(), server_default='0', nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('copilot',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted', sa.Boolean(), server_default='0', nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('license',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('number', sa.String(length=30), nullable=False),
    sa.Column('valid_until', sa.DateTime(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('organization',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted', sa.Boolean(), server_default='0', nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('point_of_interest_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('is_public', sa.Boolean(), server_default='0', nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted', sa.Boolean(), server_default='0', nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('aircraft',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('call_sign', sa.String(length=16), nullable=False),
    sa.Column('photo_filename', sa.String(length=128), nullable=True),
    sa.Column('manufacturer', sa.Text(), server_default='', nullable=False),
    sa.Column('model', sa.String(length=30), server_default='', nullable=False),
    sa.Column('description', sa.Text(), server_default='', nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted', sa.Boolean(), server_default='0', nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('metar',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('airport_id', sa.Integer(), nullable=False),
    sa.Column('metar', sa.Text(), nullable=False),
    sa.Column('issued_at', sa.DateTime(), nullable=False),
    sa.Column('deleted', sa.Boolean(), server_default='0', nullable=False),
    sa.ForeignKeyConstraint(['airport_id'], ['airport.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('point_of_interest',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('gps_latitude', sa.Float(), nullable=True),
    sa.Column('gps_longitude', sa.Float(), nullable=True),
    sa.Column('type_id', sa.Integer(), nullable=True),
    sa.Column('is_public', sa.Boolean(), server_default='0', nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted', sa.Boolean(), server_default='0', nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['point_of_interest_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_is_in_organization',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'organization_id')
    )
    op.create_table('aircraft_notes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('aircraft_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('is_public', sa.Boolean(), server_default='0', nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['aircraft_id'], ['aircraft.id'], ),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('flight',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('takeoff_airport_id', sa.Integer(), nullable=False),
    sa.Column('landing_airport_id', sa.Integer(), nullable=False),
    sa.Column('takeoff_datetime', sa.DateTime(), nullable=False),
    sa.Column('landing_datetime', sa.DateTime(), nullable=False),
    sa.Column('duration_total', sa.Integer(), nullable=True),
    sa.Column('duration_pic', sa.Integer(), nullable=True),
    sa.Column('gpx_track_filename', sa.String(length=128), nullable=True),
    sa.Column('aircraft_id', sa.Integer(), nullable=False),
    sa.Column('copilot_id', sa.Integer(), nullable=True),
    sa.Column('weather_info_takeoff_id', sa.Integer(), nullable=True),
    sa.Column('weather_info_landing_id', sa.Integer(), nullable=True),
    sa.Column('landings', sa.Integer(), nullable=False),
    sa.Column('is_public', sa.Boolean(), server_default='0', nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted', sa.Boolean(), server_default='0', nullable=False),
    sa.ForeignKeyConstraint(['aircraft_id'], ['aircraft.id'], ),
    sa.ForeignKeyConstraint(['copilot_id'], ['copilot.id'], ),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['landing_airport_id'], ['airport.id'], ),
    sa.ForeignKeyConstraint(['takeoff_airport_id'], ['airport.id'], ),
    sa.ForeignKeyConstraint(['weather_info_landing_id'], ['weather_info.id'], ),
    sa.ForeignKeyConstraint(['weather_info_takeoff_id'], ['weather_info.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('flight_track',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('flight_id', sa.Integer(), nullable=False),
    sa.Column('point_of_interest_id', sa.Integer(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['flight_id'], ['flight.id'], ),
    sa.ForeignKeyConstraint(['point_of_interest_id'], ['point_of_interest.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('photo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('filename', sa.String(length=128), nullable=False),
    sa.Column('is_flight_cover', sa.Boolean(), server_default='0', nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('exposed_at', sa.DateTime(), nullable=True),
    sa.Column('gps_latitude', sa.Float(), nullable=True),
    sa.Column('gps_longitude', sa.Float(), nullable=True),
    sa.Column('gps_altitude', sa.Float(), nullable=True),
    sa.Column('point_of_interest_id', sa.Integer(), nullable=True),
    sa.Column('flight_id', sa.Integer(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['flight_id'], ['flight.id'], ),
    sa.ForeignKeyConstraint(['point_of_interest_id'], ['point_of_interest.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('photo')
    op.drop_table('flight_track')
    op.drop_table('flight')
    op.drop_table('aircraft_notes')
    op.drop_table('user_is_in_organization')
    op.drop_table('point_of_interest')
    op.drop_table('metar')
    op.drop_table('aircraft')
    op.drop_table('point_of_interest_type')
    op.drop_table('organization')
    op.drop_table('license')
    op.drop_table('copilot')
    op.drop_table('airport')
    op.drop_table('weather_info')
    op.drop_table('user')
    # ### end Alembic commands ###
